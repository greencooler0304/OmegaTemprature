<UserControl x:Class="OmegaTempCollector.Simulate.SensorControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:OmegaTempCollector.Control"
             xmlns:controls="clr-namespace:OmegaTempCollector.Control"
             mc:Ignorable="d" 
             d:DesignHeight="250" d:DesignWidth="500" DataContextChanged="UserControl_DataContextChanged">
    <UserControl.Resources>
        <Style TargetType="{x:Type Button}" x:Key="ButtonStyle">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ButtonBase}">
                        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" 
                            BorderThickness="{TemplateBinding BorderThickness}" 
                            Background="{TemplateBinding Background}"
                            SnapsToDevicePixels="True">
                            <ContentPresenter x:Name="contentPresenter" 
                                          ContentTemplate="{TemplateBinding ContentTemplate}"
                                          Content="{TemplateBinding Content}"
                                          ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                          Focusable="False"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          Margin="{TemplateBinding Padding}"
                                          RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="Button.IsDefaulted" Value="True">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" TargetName="border" Value="#FFBEE6FD"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="#FF3C7FB1"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Background" TargetName="border" Value="#FFC4E5F6"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="#FF2C628B"/>
                            </Trigger>
                            <Trigger Property="ToggleButton.IsChecked" Value="True">
                                <Setter Property="Background" TargetName="border" Value="#FFBCDDEE"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="#FF245A83"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="True">
                                <Setter Property="Foreground" >
                                    <Setter.Value>
                                        <SolidColorBrush Color="{Binding ColorTitle, UpdateSourceTrigger=PropertyChanged}"/>
                                    </Setter.Value>
                                </Setter>
                                <Setter Property="Background">
                                    <Setter.Value>
                                        <SolidColorBrush Color="{Binding ColorButtonBack, UpdateSourceTrigger=PropertyChanged}"/>
                                    </Setter.Value>
                                </Setter>
                                <Setter Property="BorderBrush" TargetName="border" >
                                    <Setter.Value>
                                        <SolidColorBrush Color="{Binding ColorTitle, UpdateSourceTrigger=PropertyChanged}"/>
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Foreground" >
                                    <Setter.Value>
                                        <SolidColorBrush Color="{Binding ColorBtnDisable, UpdateSourceTrigger=PropertyChanged}"/>
                                    </Setter.Value>
                                </Setter>
                                <Setter Property="Background" TargetName="border" >
                                    <Setter.Value>
                                        <SolidColorBrush Color="{Binding ColorBack, UpdateSourceTrigger=PropertyChanged}"/>
                                    </Setter.Value>
                                </Setter>
                                <Setter Property="BorderBrush" TargetName="border" >
                                    <Setter.Value>
                                        <SolidColorBrush Color="{Binding ColorBtnDisableBack, UpdateSourceTrigger=PropertyChanged}"/>
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="{x:Type Button}" x:Key="StartButtonStyle">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ButtonBase}">
                        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" 
                            BorderThickness="{TemplateBinding BorderThickness}" 
                            Background="{TemplateBinding Background}"
                            SnapsToDevicePixels="True">
                            <ContentPresenter x:Name="contentPresenter" 
                                          ContentTemplate="{TemplateBinding ContentTemplate}"
                                          Content="{TemplateBinding Content}"
                                          ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                          Focusable="False"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          Margin="{TemplateBinding Padding}"
                                          RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="Button.IsDefaulted" Value="True">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" TargetName="border" Value="#FFBEE6FD"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="#FF3C7FB1"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Background" TargetName="border" Value="#FFC4E5F6"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="#FF2C628B"/>
                            </Trigger>
                            <Trigger Property="ToggleButton.IsChecked" Value="True">
                                <Setter Property="Background" TargetName="border" Value="#FFBCDDEE"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="#FF245A83"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="True">
                                <Setter Property="Foreground" >
                                    <Setter.Value>
                                        <SolidColorBrush Color="Black"/>
                                    </Setter.Value>
                                </Setter>
                                <Setter Property="Background" >
                                    <Setter.Value>
                                        <SolidColorBrush Color="{Binding ColorBtnStartBack, UpdateSourceTrigger=PropertyChanged}"/>
                                    </Setter.Value>
                                </Setter>
                                <Setter Property="BorderBrush" TargetName="border" >
                                    <Setter.Value>
                                        <SolidColorBrush Color="{Binding ColorTitle, UpdateSourceTrigger=PropertyChanged}"/>
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Foreground" >
                                    <Setter.Value>
                                        <SolidColorBrush Color="{Binding ColorBtnDisable, UpdateSourceTrigger=PropertyChanged}"/>
                                    </Setter.Value>
                                </Setter>
                                <Setter Property="Background" TargetName="border" >
                                    <Setter.Value>
                                        <SolidColorBrush Color="{Binding ColorBack, UpdateSourceTrigger=PropertyChanged}"/>
                                    </Setter.Value>
                                </Setter>
                                <Setter Property="BorderBrush" TargetName="border" >
                                    <Setter.Value>
                                        <SolidColorBrush Color="{Binding ColorBtnDisableBack, UpdateSourceTrigger=PropertyChanged}"/>
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="{x:Type Button}" x:Key="StopButtonStyle">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ButtonBase}">
                        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" 
                            BorderThickness="{TemplateBinding BorderThickness}" 
                            Background="{TemplateBinding Background}"
                            SnapsToDevicePixels="True">
                            <ContentPresenter x:Name="contentPresenter" 
                                          ContentTemplate="{TemplateBinding ContentTemplate}"
                                          Content="{TemplateBinding Content}"
                                          ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                          Focusable="False"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          Margin="{TemplateBinding Padding}"
                                          RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="Button.IsDefaulted" Value="True">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" TargetName="border" Value="#FFBEE6FD"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="#FF3C7FB1"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Background" TargetName="border" Value="#FFC4E5F6"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="#FF2C628B"/>
                            </Trigger>
                            <Trigger Property="ToggleButton.IsChecked" Value="True">
                                <Setter Property="Background" TargetName="border" Value="#FFBCDDEE"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="#FF245A83"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="True">
                                <Setter Property="Foreground" >
                                    <Setter.Value>
                                        <SolidColorBrush Color="Black"/>
                                    </Setter.Value>
                                </Setter>
                                <Setter Property="Background" >
                                    <Setter.Value>
                                        <SolidColorBrush Color="{Binding ColorBtnStopBack, UpdateSourceTrigger=PropertyChanged}"/>
                                    </Setter.Value>
                                </Setter>
                                <Setter Property="BorderBrush" TargetName="border" >
                                    <Setter.Value>
                                        <SolidColorBrush Color="{Binding ColorTitle, UpdateSourceTrigger=PropertyChanged}"/>
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Foreground" >
                                    <Setter.Value>
                                        <SolidColorBrush Color="{Binding ColorBtnDisable, UpdateSourceTrigger=PropertyChanged}"/>
                                    </Setter.Value>
                                </Setter>
                                <Setter Property="Background" TargetName="border" >
                                    <Setter.Value>
                                        <SolidColorBrush Color="{Binding ColorBack, UpdateSourceTrigger=PropertyChanged}"/>
                                    </Setter.Value>
                                </Setter>
                                <Setter Property="BorderBrush" TargetName="border" >
                                    <Setter.Value>
                                        <SolidColorBrush Color="{Binding ColorBtnDisableBack, UpdateSourceTrigger=PropertyChanged}"/>
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <ControlTemplate x:Key="ComboBoxToggleButton" TargetType="{x:Type ToggleButton}">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition />
                    <ColumnDefinition Width="20" />
                </Grid.ColumnDefinitions>
                <Border
                  x:Name="Border" 
                  Grid.ColumnSpan="2"
                  CornerRadius="0"
                  Background="#FF3F3F3F"
                  BorderBrush="#FF97A0A5"
                  BorderThickness="1" />
                <Border 
                  Grid.Column="0"
                  CornerRadius="0" 
                  Margin="1" 
                  Background="#FF3F3F3F" 
                  BorderBrush="#FF97A0A5"
                  BorderThickness="0,0,1,0" />
                <Path 
                  x:Name="Arrow"
                  Grid.Column="1"     
                  Fill="White"
                  HorizontalAlignment="Center"
                  VerticalAlignment="Center"
                  Data="M0,0 L0,2 L4,6 L8,2 L8,0 L4,4 z"
                />
            </Grid>
            <!--<ControlTemplate.Triggers>
            <Trigger Property="ToggleButton.IsMouseOver" Value="true">
                <Setter TargetName="Border" Property="Background" Value="#808080" />
            </Trigger>
            <Trigger Property="ToggleButton.IsChecked" Value="true">
                <Setter TargetName="Border" Property="Background" Value="#E0E0E0" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter TargetName="Border" Property="Background" Value="#EEEEEE" />
                <Setter TargetName="Border" Property="BorderBrush" Value="#AAAAAA" />
                <Setter Property="Foreground" Value="#888888"/>
                <Setter TargetName="Arrow" Property="Fill" Value="#888888" />
            </Trigger>
        </ControlTemplate.Triggers>-->
        </ControlTemplate>

        <ControlTemplate x:Key="ComboBoxTextBox" TargetType="{x:Type TextBox}">
            <Border x:Name="PART_ContentHost" Focusable="False" Background="{TemplateBinding Background}" />
        </ControlTemplate>

        <Style x:Key="{x:Type ComboBox}" TargetType="{x:Type ComboBox}">
            <Setter Property="SnapsToDevicePixels" Value="true"/>
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
            <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
            <Setter Property="MinWidth" Value="20"/>
            <Setter Property="MinHeight" Value="20"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ComboBox}">
                        <Grid>
                            <ToggleButton 
                            Name="ToggleButton" 
                            Template="{StaticResource ComboBoxToggleButton}" 
                            Grid.Column="2" 
                            Focusable="false"
                            IsChecked="{Binding Path=IsDropDownOpen,Mode=TwoWay,RelativeSource={RelativeSource TemplatedParent}}"
                            ClickMode="Press">
                            </ToggleButton>
                            <ContentPresenter Name="ContentSite" IsHitTestVisible="False"  Content="{TemplateBinding SelectionBoxItem}"
                            ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                            ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                            Margin="3,3,23,3"
                            VerticalAlignment="Center"
                            HorizontalAlignment="Center" />
                            <TextBox x:Name="PART_EditableTextBox"
                            Style="{x:Null}" 
                            Template="{StaticResource ComboBoxTextBox}" 
                            HorizontalAlignment="Center" 
                            VerticalAlignment="Center" 
                            Margin="3,3,23,3"
                            Focusable="True" 
                            Background="#FF3F3F3F"
                            Foreground="Green"
                            Visibility="Hidden"
                            IsReadOnly="{TemplateBinding IsReadOnly}"/>
                            <Popup 
                            Name="Popup"
                            Placement="Bottom"
                            IsOpen="{TemplateBinding IsDropDownOpen}"
                            AllowsTransparency="True" 
                            Focusable="False"
                            PopupAnimation="Slide">

                                <Grid Name="DropDown"
                              SnapsToDevicePixels="True"                
                              MinWidth="{TemplateBinding ActualWidth}"
                              MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                    <Border 
                                x:Name="DropDownBorder"
                                Background="#FF3F3F3F"

                                BorderThickness="1"
                                BorderBrush="#888888"/>
                                    <ScrollViewer Margin="4,6,4,6" SnapsToDevicePixels="True">
                                        <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained" />
                                    </ScrollViewer>
                                </Grid>
                            </Popup>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="HasItems" Value="false">
                                <Setter TargetName="DropDownBorder" Property="MinHeight" Value="95"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="#888888"/>
                            </Trigger>
                            <Trigger Property="IsGrouping" Value="true">
                                <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                            </Trigger>
                            <Trigger SourceName="Popup" Property="Popup.AllowsTransparency" Value="true">
                                <Setter TargetName="DropDownBorder" Property="CornerRadius" Value="0"/>
                                <Setter TargetName="DropDownBorder" Property="Margin" Value="0,2,0,0"/>
                            </Trigger>
                            <Trigger Property="IsEditable"  Value="true">
                                <Setter Property="IsTabStop" Value="false"/>
                                <Setter TargetName="PART_EditableTextBox" Property="Visibility" Value="Visible"/>
                                <Setter TargetName="ContentSite" Property="Visibility" Value="Hidden"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
            </Style.Triggers>
        </Style>

        <!-- SimpleStyles: ComboBoxItem -->
        <Style x:Key="{x:Type ComboBoxItem}" TargetType="{x:Type ComboBoxItem}">
            <Setter Property="SnapsToDevicePixels" Value="true"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                        <Border Name="Border"
                              Padding="2"
                              SnapsToDevicePixels="true">
                            <ContentPresenter />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsHighlighted" Value="true">
                                <Setter TargetName="Border" Property="Background" Value="#FF4F4F4F"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="#888888"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </UserControl.Resources>

    <Grid>
        <Grid.Background>
            <SolidColorBrush Color="{Binding ColorPanelBack, UpdateSourceTrigger=PropertyChanged}"/>
        </Grid.Background>
        <Grid.RowDefinitions>
            <RowDefinition Height="30" />
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="200" />
            <ColumnDefinition />
            <ColumnDefinition/>
            <ColumnDefinition Width="2*" />
        </Grid.ColumnDefinitions>

        <Border Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="1" Margin="0,0,0,2" >
            <Border.Background>
                <SolidColorBrush Color="{Binding ColorTitleBack, UpdateSourceTrigger=PropertyChanged}"/>
            </Border.Background>
            <Viewbox Stretch="Uniform" >
                <TextBlock Text="{Binding Name, UpdateSourceTrigger=PropertyChanged}" >
                    <TextBlock.Foreground>
                        <SolidColorBrush Color="White"/>
                    </TextBlock.Foreground>
                </TextBlock>
            </Viewbox>
        </Border>

        <Button Style="{StaticResource StartButtonStyle}" Grid.Row="0" Grid.Column="1" IsEnabled="{Binding IsStop, UpdateSourceTrigger=PropertyChanged}" Content="시작" Background="LightBlue" Margin="5,0,5,0" Click="BtnStart_Click" x:Name="BtnStart" Grid.ColumnSpan="2" />
        <Button Style="{StaticResource StopButtonStyle}" Grid.Row="0" Grid.Column="3" IsEnabled="{Binding IsStart, UpdateSourceTrigger=PropertyChanged}" Content="종료" Background="LightPink" Margin="5,0,5,0" Click="BtnStop_Click" x:Name="BtnStop"  />

        <Grid Grid.Row="1" Grid.Column="0" Margin="5,5,5,5">
            <Grid.RowDefinitions>
                <RowDefinition Height="1*" />
                <RowDefinition Height="2*" />
                <RowDefinition Height="2*" />
                <RowDefinition Height="2*" />
                <RowDefinition Height="1*" />
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>
            <Border Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="1" Margin="2 2 2 2" >
                <Border.Background>
                    <SolidColorBrush Color="{Binding ColorPanelBack, UpdateSourceTrigger=PropertyChanged}"/>
                </Border.Background>
                <Viewbox Stretch="None" >
                    <TextBlock Text="IP" >
                        <TextBlock.Foreground>
                            <SolidColorBrush Color="White"/>
                        </TextBlock.Foreground>
                    </TextBlock>
                </Viewbox>
            </Border>
            <TextBox Grid.Row="1" Grid.Column="1" x:Name="txIP" Text="{Binding IP, Mode=TwoWay}" Height="30" IsReadOnly="True" FontSize="16" Foreground="#FFFFFF" Background="#2D2D30" Margin="5 2 5 2" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" />

            <Border Grid.Row="2" Grid.Column="0" Grid.ColumnSpan="1" Margin="2 2 2 2" >
                <Border.Background>
                    <SolidColorBrush Color="{Binding ColorPanelBack, UpdateSourceTrigger=PropertyChanged}"/>
                </Border.Background>
                <Viewbox Stretch="None" >
                    <TextBlock Text="Port" >
                        <TextBlock.Foreground>
                            <SolidColorBrush Color="White"/>
                        </TextBlock.Foreground>
                    </TextBlock>
                </Viewbox>
            </Border>
            <TextBox Grid.Row="2" Grid.Column="1" x:Name="txPort" Text="{Binding Port, Mode=TwoWay}" IsReadOnly="{Binding IsStart, UpdateSourceTrigger=PropertyChanged}" Height="30" FontSize="16" Foreground="#FFFFFF" Background="#2D2D30" Margin="5 2 5 2" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" />

            <Border Grid.Row="3" Grid.Column="0" Grid.ColumnSpan="1" Margin="2 2 2 2" >
                <Border.Background>
                    <SolidColorBrush Color="{Binding ColorPanelBack, UpdateSourceTrigger=PropertyChanged}"/>
                </Border.Background>
                <Viewbox Stretch="None" >
                    <TextBlock Text="Value" >
                        <TextBlock.Foreground>
                            <SolidColorBrush Color="White"/>
                        </TextBlock.Foreground>
                    </TextBlock>
                </Viewbox>
            </Border>
            <ComboBox Grid.Row="3" Grid.Column="1" x:Name="cbValue" SelectedValue="{Binding Path=Value, Mode=TwoWay}" IsEditable="True" Height="30" FontSize="16" Foreground="#FFFFFF" Background="#2D2D30" Margin="5 2 5 2" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" KeyDown="cbValue_KeyDown" />

        </Grid>

        <controls:LogControl Grid.Row="1" Grid.Column="1" Grid.ColumnSpan="3" x:Name="lsLog"  Margin="5,5,5,5" />

    </Grid>
</UserControl>
